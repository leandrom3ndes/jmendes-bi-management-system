{
    "swagger": "2.0",
    "info": {
        "title": "Mayan EDMS API",
        "description": "Free Open Source Electronic Document Management System",
        "license": {
            "name": "Apache 2.0"
        },
        "version": "v2"
    },
    "host": "localhost:1234",
    "schemes": [
        "http"
    ],
    "basePath": "/api",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "basic": []
        }
    ],
    "paths": {
        "/auth/token/obtain/": {
            "post": {
                "operationId": "auth_token_obtain_create",
                "description": "Obtain an API authentication token.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "auth"
                ]
            },
            "parameters": []
        },
        "/cabinets/": {
            "get": {
                "operationId": "cabinets_list",
                "description": "Returns a list of all the cabinets.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Cabinet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "post": {
                "operationId": "cabinets_create",
                "description": "Create a new cabinet",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "parameters": []
        },
        "/cabinets/{id}/": {
            "get": {
                "operationId": "cabinets_read",
                "description": "Returns the details of the selected cabinet.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Cabinet"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "put": {
                "operationId": "cabinets_update",
                "description": "Edit the selected cabinet.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "patch": {
                "operationId": "cabinets_partial_update",
                "description": "Edit the selected cabinet.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableCabinet"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "delete": {
                "operationId": "cabinets_delete",
                "description": "Delete the selected cabinet.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Cabinet.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/cabinets/{id}/documents/": {
            "get": {
                "operationId": "cabinets_documents_list",
                "description": "Returns a list of all the documents contained in a particular cabinet.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CabinetDocument"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "post": {
                "operationId": "cabinets_documents_create",
                "description": "Add a document to the selected cabinet.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewCabinetDocument"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewCabinetDocument"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/cabinets/{id}/documents/{document_pk}/": {
            "get": {
                "operationId": "cabinets_documents_read",
                "description": "Returns the details of the selected cabinet document.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CabinetDocument"
                        }
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "delete": {
                "operationId": "cabinets_documents_delete",
                "description": "Remove a document from the selected cabinet.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "cabinets"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/checkouts/": {
            "get": {
                "operationId": "checkouts_list",
                "description": "Returns a list of all the documents that are currently checked out.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentCheckout"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "checkouts"
                ]
            },
            "post": {
                "operationId": "checkouts_create",
                "description": "Checkout a document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentCheckout"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentCheckout"
                        }
                    }
                },
                "tags": [
                    "checkouts"
                ]
            },
            "parameters": []
        },
        "/checkouts/{id}/checkout_info/": {
            "get": {
                "operationId": "checkouts_checkout_info_read",
                "description": "Retrieve the details of the selected checked out document entry.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentCheckout"
                        }
                    }
                },
                "tags": [
                    "checkouts"
                ]
            },
            "delete": {
                "operationId": "checkouts_checkout_info_delete",
                "description": "Checkin a document.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "checkouts"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/content_types/": {
            "get": {
                "operationId": "content_types_list",
                "description": "Returns a list of all the available content types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ContentType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "content_types"
                ]
            },
            "parameters": []
        },
        "/document_types/": {
            "get": {
                "operationId": "document_types_list",
                "description": "Returns a list of all the document types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "post": {
                "operationId": "document_types_create",
                "description": "Create a new document type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": []
        },
        "/document_types/{document_type_pk}/metadata_types/": {
            "get": {
                "operationId": "document_types_metadata_types_list",
                "description": "Returns a list of selected document type's metadata types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentTypeMetadataType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "post": {
                "operationId": "document_types_metadata_types_create",
                "description": "Add a metadata type to the selected document type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentTypeMetadataType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentTypeMetadataType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "document_type_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/document_types/{document_type_pk}/metadata_types/{metadata_type_pk}/": {
            "get": {
                "operationId": "document_types_metadata_types_read",
                "description": "Retrieve the details of a document type metadata type.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeMetadataType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "put": {
                "operationId": "document_types_metadata_types_update",
                "description": "Edit the selected document type metadata type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentTypeMetadataType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentTypeMetadataType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "patch": {
                "operationId": "document_types_metadata_types_partial_update",
                "description": "Edit the selected document type metadata type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentTypeMetadataType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentTypeMetadataType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "delete": {
                "operationId": "document_types_metadata_types_delete",
                "description": "Remove a metadata type from a document type.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "document_type_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "metadata_type_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/document_types/{id}/": {
            "get": {
                "operationId": "document_types_read",
                "description": "Return the details of the selected document type.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "put": {
                "operationId": "document_types_update",
                "description": "Edit the properties of the selected document type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "patch": {
                "operationId": "document_types_partial_update",
                "description": "Edit the properties of the selected document type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentType"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "delete": {
                "operationId": "document_types_delete",
                "description": "Delete the selected document type.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document type.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/document_types/{id}/documents/": {
            "get": {
                "operationId": "document_types_documents_list",
                "description": "Returns a list of all the documents of a particular document type.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Document"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/document_types/{id}/ocr/settings/": {
            "get": {
                "operationId": "document_types_ocr_settings_read",
                "description": "Return the document type OCR settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeOCRSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "put": {
                "operationId": "document_types_ocr_settings_update",
                "description": "Set the document type OCR settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeOCRSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeOCRSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "patch": {
                "operationId": "document_types_ocr_settings_partial_update",
                "description": "Set the document type OCR settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeOCRSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeOCRSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document type settings.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/document_types/{id}/parsing/settings/": {
            "get": {
                "operationId": "document_types_parsing_settings_read",
                "description": "Return the document type parsing settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeParsingSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "put": {
                "operationId": "document_types_parsing_settings_update",
                "description": "Set the document type parsing settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeParsingSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeParsingSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "patch": {
                "operationId": "document_types_parsing_settings_partial_update",
                "description": "Set the document type parsing settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeParsingSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTypeParsingSettings"
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document type settings.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/document_types/{id}/workflows/": {
            "get": {
                "operationId": "document_types_workflows_list",
                "description": "Returns a list of all the document type workflows.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Workflow"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "document_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/": {
            "get": {
                "operationId": "documents_list",
                "description": "Returns a list of all the documents.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Document"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_create",
                "description": "Create a new document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocument"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocument"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": []
        },
        "/documents/recent/": {
            "get": {
                "operationId": "documents_recent_list",
                "description": "Return a list of the recent documents for the current user.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RecentDocument"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": []
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/detached/": {
            "get": {
                "operationId": "documents_versions_signatures_detached_list",
                "description": "Returns a list of all the detached signatures of a document version.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DetachedSignature"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_versions_signatures_detached_create",
                "description": "Create an detached signature for a document version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DetachedSignature"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DetachedSignature"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/detached/sign/": {
            "post": {
                "operationId": "documents_versions_signatures_detached_sign_create",
                "description": "Sign a document version with a detached signature.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignDetached"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SignDetached"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/detached/{detached_signature_id}/": {
            "get": {
                "operationId": "documents_versions_signatures_detached_read",
                "description": "Returns the details of the selected detached signature.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DetachedSignature"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_versions_signatures_detached_delete",
                "description": "Delete an detached signature of the selected document.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "detached_signature_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/embedded/": {
            "get": {
                "operationId": "documents_versions_signatures_embedded_list",
                "description": "Returns a list of all the embedded signatures of a document version.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EmbeddedSignature"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/embedded/sign/": {
            "post": {
                "operationId": "documents_versions_signatures_embedded_sign_create",
                "description": "Sign a document version with an embedded signature.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignEmbedded"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SignEmbedded"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_id}/versions/{document_version_id}/signatures/embedded/{embedded_signature_id}/": {
            "get": {
                "operationId": "documents_versions_signatures_embedded_read",
                "description": "Returns the details of the selected embedded signature.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EmbeddedSignature"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_version_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "embedded_signature_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/comments/": {
            "get": {
                "operationId": "documents_comments_list",
                "description": "Returns a list of all the document comments.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_comments_create",
                "description": "Create a new document comment.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableComment"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/comments/{comment_pk}/": {
            "get": {
                "operationId": "documents_comments_read",
                "description": "Returns the details of the selected document comment.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "put": {
                "operationId": "documents_comments_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "patch": {
                "operationId": "documents_comments_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_comments_delete",
                "description": "Delete the selected document comment.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "comment_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/metadata/": {
            "get": {
                "operationId": "documents_metadata_list",
                "description": "Returns a list of selected document's metadata types and values.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentMetadata"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_metadata_create",
                "description": "Add an existing metadata type and value to the selected document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentMetadata"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentMetadata"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/metadata/{metadata_pk}/": {
            "get": {
                "operationId": "documents_metadata_read",
                "description": "Return the details of the selected document metadata type and value.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentMetadata"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "put": {
                "operationId": "documents_metadata_update",
                "description": "Edit the selected document metadata type and value.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentMetadata"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "patch": {
                "operationId": "documents_metadata_partial_update",
                "description": "Edit the selected document metadata type and value.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentMetadata"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentMetadata"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_metadata_delete",
                "description": "Remove this metadata entry from the selected document.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "metadata_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/tags/": {
            "get": {
                "operationId": "documents_tags_list",
                "description": "Returns a list of all the tags attached to a document.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentTag"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_tags_create",
                "description": "Attach a tag to a document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentTag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentTag"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/tags/{id}/": {
            "get": {
                "operationId": "documents_tags_read",
                "description": "Returns the details of the selected document tag.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentTag"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_tags_delete",
                "description": "Remove a tag from the selected document.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/versions/{version_pk}/ocr/": {
            "post": {
                "operationId": "documents_versions_ocr_create",
                "description": "Submit a document version for OCR.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/versions/{version_pk}/pages/{page_pk}/content/": {
            "get": {
                "operationId": "documents_versions_pages_content_read",
                "description": "Returns the content of the selected document page.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentPageContent"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "page_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{document_pk}/versions/{version_pk}/pages/{page_pk}/ocr/": {
            "get": {
                "operationId": "documents_versions_pages_ocr_read",
                "description": "Returns the OCR content of the selected document page.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentPageOCRContent"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "document_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "page_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/": {
            "get": {
                "operationId": "documents_read",
                "description": "Return the details of the selected document.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "put": {
                "operationId": "documents_update",
                "description": "Edit the properties of the selected document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocument"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "patch": {
                "operationId": "documents_partial_update",
                "description": "Edit the properties of the selected document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocument"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocument"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_delete",
                "description": "Move the selected document to the thrash.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/documents/{id}/cabinets/": {
            "get": {
                "operationId": "documents_cabinets_list",
                "description": "Returns a list of all the cabinets to which a document belongs.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Cabinet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/download/": {
            "get": {
                "operationId": "documents_download_read",
                "description": "Download the latest version of a document.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/documents/{id}/indexes/": {
            "get": {
                "operationId": "documents_indexes_list",
                "description": "Returns a list of all the indexes to which a document belongs.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IndexInstanceNode"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/ocr/submit/": {
            "post": {
                "operationId": "documents_ocr_submit_create",
                "description": "Submit a document for OCR.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/documents/{id}/resolved_smart_links/": {
            "get": {
                "operationId": "documents_resolved_smart_links_list",
                "description": "Returns a list of the smart links that apply to the document.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResolvedSmartLink"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/resolved_smart_links/{smart_link_pk}/": {
            "get": {
                "operationId": "documents_resolved_smart_links_read",
                "description": "Return the details of the selected resolved smart link.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResolvedSmartLink"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "smart_link_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/resolved_smart_links/{smart_link_pk}/documents/": {
            "get": {
                "operationId": "documents_resolved_smart_links_documents_list",
                "description": "Returns a list of the smart link documents that apply to the document.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResolvedSmartLinkDocument"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "smart_link_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/type/change/": {
            "post": {
                "operationId": "documents_type_change_create",
                "description": "Change the type of the selected document.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentDocumentType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentDocumentType"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/documents/{id}/versions/": {
            "get": {
                "operationId": "documents_versions_list",
                "description": "Return a list of the selected document's versions.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentVersion"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_versions_create",
                "description": "Create a new document version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewDocumentVersion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewDocumentVersion"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/versions/{version_pk}/": {
            "get": {
                "operationId": "documents_versions_read",
                "description": "Returns the selected document version details.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentVersion"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "put": {
                "operationId": "documents_versions_update",
                "description": "Edit the selected document version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentVersion"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "patch": {
                "operationId": "documents_versions_partial_update",
                "description": "Edit the selected document version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableDocumentVersion"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "delete": {
                "operationId": "documents_versions_delete",
                "description": "Delete the selected document version.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/versions/{version_pk}/download/": {
            "get": {
                "operationId": "documents_versions_download_read",
                "description": "Download a document version.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/versions/{version_pk}/pages/": {
            "get": {
                "operationId": "documents_versions_pages_list",
                "description": "",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DocumentPage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/versions/{version_pk}/pages/{page_pk}": {
            "get": {
                "operationId": "documents_versions_pages_read",
                "description": "Returns the selected document page details.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentPage"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "put": {
                "operationId": "documents_versions_pages_update",
                "description": "Edit the selected document page.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentPage"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "patch": {
                "operationId": "documents_versions_pages_partial_update",
                "description": "Edit the selected document page.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DocumentPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DocumentPage"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "page_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/versions/{version_pk}/pages/{page_pk}/image/": {
            "get": {
                "operationId": "documents_versions_pages_image_read",
                "description": "Returns an image representation of the selected document.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "version_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "page_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/workflows/": {
            "get": {
                "operationId": "documents_workflows_list",
                "description": "Returns a list of all the document workflows.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkflowInstance"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/workflows/{workflow_pk}/": {
            "get": {
                "operationId": "documents_workflows_read",
                "description": "Return the details of the selected document workflow.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowInstance"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "workflow_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/documents/{id}/workflows/{workflow_pk}/log_entries/": {
            "get": {
                "operationId": "documents_workflows_log_entries_list",
                "description": "Returns a list of all the document workflows log entries.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkflowInstanceLogEntry"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "post": {
                "operationId": "documents_workflows_log_entries_create",
                "description": "Transition a document workflow by creating a new document workflow log entry.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowInstanceLogEntry"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowInstanceLogEntry"
                        }
                    }
                },
                "tags": [
                    "documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "workflow_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/event_type_namespaces/": {
            "get": {
                "operationId": "event_type_namespaces_list",
                "description": "Returns a list of all the available event type namespaces.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventTypeNamespace"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_type_namespaces"
                ]
            },
            "parameters": []
        },
        "/event_type_namespaces/{name}/": {
            "get": {
                "operationId": "event_type_namespaces_read",
                "description": "Returns the details of an event type namespace.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventTypeNamespace"
                        }
                    }
                },
                "tags": [
                    "event_type_namespaces"
                ]
            },
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/event_type_namespaces/{name}/event_types/": {
            "get": {
                "operationId": "event_type_namespaces_event_types_list",
                "description": "Returns a list of all the available event types from a namespaces.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_type_namespaces"
                ]
            },
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/event_types/": {
            "get": {
                "operationId": "event_types_list",
                "description": "Returns a list of all the available event types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "event_types"
                ]
            },
            "parameters": []
        },
        "/events/": {
            "get": {
                "operationId": "events_list",
                "description": "Returns a list of all the available events.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "events"
                ]
            },
            "parameters": []
        },
        "/groups/": {
            "get": {
                "operationId": "groups_list",
                "description": "Returns a list of all the groups.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Group"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "post": {
                "operationId": "groups_create",
                "description": "Create a new group.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "parameters": []
        },
        "/groups/{id}/": {
            "get": {
                "operationId": "groups_read",
                "description": "Return the details of the selected group.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "put": {
                "operationId": "groups_update",
                "description": "Edit the selected group.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "patch": {
                "operationId": "groups_partial_update",
                "description": "Partially edit the selected group.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "delete": {
                "operationId": "groups_delete",
                "description": "Delete the selected group.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "groups"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/indexes/": {
            "get": {
                "operationId": "indexes_list",
                "description": "Returns a list of all the defined indexes.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Index"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "post": {
                "operationId": "indexes_create",
                "description": "Create a new index.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "parameters": []
        },
        "/indexes/node/{id}/documents/": {
            "get": {
                "operationId": "indexes_node_documents_list",
                "description": "Returns a list of all the documents contained by a particular index node\ninstance.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Document"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/indexes/template/{id}/": {
            "get": {
                "operationId": "indexes_template_read",
                "description": "Returns the details of the selected index template node.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndexTemplateNode"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "put": {
                "operationId": "indexes_template_update",
                "description": "Edit an index template node.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndexTemplateNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndexTemplateNode"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "patch": {
                "operationId": "indexes_template_partial_update",
                "description": "Partially edit an index template node.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IndexTemplateNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/IndexTemplateNode"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "delete": {
                "operationId": "indexes_template_delete",
                "description": "Delete the selected index template node.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Index node template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/indexes/{id}/": {
            "get": {
                "operationId": "indexes_read",
                "description": "Returns the details of the selected index.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "put": {
                "operationId": "indexes_update",
                "description": "Edit an index.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "patch": {
                "operationId": "indexes_partial_update",
                "description": "Partially edit an index.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Index"
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "delete": {
                "operationId": "indexes_delete",
                "description": "Delete the selected index.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Index.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/indexes/{id}/template/": {
            "get": {
                "operationId": "indexes_template_list",
                "description": "Returns a list of all the template nodes for the selected index.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IndexTemplateNode"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "indexes"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/keys/": {
            "get": {
                "operationId": "keys_list",
                "description": "Returns a list of all the keys.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Key"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "keys"
                ]
            },
            "post": {
                "operationId": "keys_create",
                "description": "Upload a new key.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Key"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Key"
                        }
                    }
                },
                "tags": [
                    "keys"
                ]
            },
            "parameters": []
        },
        "/keys/{id}/": {
            "get": {
                "operationId": "keys_read",
                "description": "Return the details of the selected key.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Key"
                        }
                    }
                },
                "tags": [
                    "keys"
                ]
            },
            "delete": {
                "operationId": "keys_delete",
                "description": "Delete the selected key.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "keys"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Key.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/messages/": {
            "get": {
                "operationId": "messages_list",
                "description": "Returns a list of all the messages.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Message"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "post": {
                "operationId": "messages_create",
                "description": "Create a new message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "parameters": []
        },
        "/messages/{id}/": {
            "get": {
                "operationId": "messages_read",
                "description": "Return the details of the selected message.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "put": {
                "operationId": "messages_update",
                "description": "Edit the selected message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "patch": {
                "operationId": "messages_partial_update",
                "description": "Edit the selected message.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "delete": {
                "operationId": "messages_delete",
                "description": "Delete the selected message.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "messages"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Message.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/metadata_types/": {
            "get": {
                "operationId": "metadata_types_list",
                "description": "Returns a list of all the metadata types.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MetadataType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "post": {
                "operationId": "metadata_types_create",
                "description": "Create a new metadata type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "parameters": []
        },
        "/metadata_types/{metadata_type_pk}/": {
            "get": {
                "operationId": "metadata_types_read",
                "description": "Return the details of the selected metadata type.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "put": {
                "operationId": "metadata_types_update",
                "description": "Edit the selected metadata type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "patch": {
                "operationId": "metadata_types_partial_update",
                "description": "Edit the selected metadata type.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MetadataType"
                        }
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "delete": {
                "operationId": "metadata_types_delete",
                "description": "Delete the selected metadata type.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "metadata_types"
                ]
            },
            "parameters": [
                {
                    "name": "metadata_type_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/notifications/": {
            "get": {
                "operationId": "notifications_list",
                "description": "Return a list of notifications for the current user.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Notification"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "notifications"
                ]
            },
            "parameters": []
        },
        "/objects/{app_label}/{model_name}/{object_id}/acls/": {
            "get": {
                "operationId": "objects_acls_list",
                "description": "Returns a list of all the object's access control lists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AccessControlList"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "post": {
                "operationId": "objects_acls_create",
                "description": "Create a new access control list for the selected object.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableAccessControlList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableAccessControlList"
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "object_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/objects/{app_label}/{model_name}/{object_id}/acls/{id}/": {
            "get": {
                "operationId": "objects_acls_read",
                "description": "Returns the details of the selected access control list.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccessControlList"
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "delete": {
                "operationId": "objects_acls_delete",
                "description": "Delete the selected access control list.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "object_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/objects/{app_label}/{model_name}/{object_id}/acls/{id}/permissions/": {
            "get": {
                "operationId": "objects_acls_permissions_list",
                "description": "Returns the access control list permission list.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AccessControlListPermission"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "post": {
                "operationId": "objects_acls_permissions_create",
                "description": "Add a new permission to the selected access control list.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableAccessControlListPermission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableAccessControlListPermission"
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "object_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/objects/{app_label}/{model_name}/{object_id}/acls/{id}/permissions/{permission_pk}/": {
            "get": {
                "operationId": "objects_acls_permissions_read",
                "description": "Returns the details of the selected access control list permission.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AccessControlListPermission"
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "delete": {
                "operationId": "objects_acls_permissions_delete",
                "description": "Remove the permission from the selected access control list.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "object_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "permission_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/objects/{app_label}/{model}/{object_id}/events/": {
            "get": {
                "operationId": "objects_events_list",
                "description": "Return a list of events for the specified object.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "objects"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "object_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/permissions/": {
            "get": {
                "operationId": "permissions_list",
                "description": "Returns a list of all the available permissions.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "permissions"
                ]
            },
            "parameters": []
        },
        "/roles/": {
            "get": {
                "operationId": "roles_list",
                "description": "Returns a list of all the roles.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "post": {
                "operationId": "roles_create",
                "description": "Create a new role.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "parameters": []
        },
        "/roles/{id}/": {
            "get": {
                "operationId": "roles_read",
                "description": "Return the details of the selected role.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "put": {
                "operationId": "roles_update",
                "description": "Edit the selected role.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "patch": {
                "operationId": "roles_partial_update",
                "description": "Edit the selected role.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableRole"
                        }
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "delete": {
                "operationId": "roles_delete",
                "description": "Delete the selected role.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "roles"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Role.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/search/advanced/{search_model}/": {
            "get": {
                "operationId": "search_advanced_read",
                "description": "Perform an advanced search operation",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "search"
                ]
            },
            "parameters": [
                {
                    "name": "search_model",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/search/{search_model}/": {
            "get": {
                "operationId": "search_read",
                "description": "Perform a search operation",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "search"
                ]
            },
            "parameters": [
                {
                    "name": "search_model",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/search_models/": {
            "get": {
                "operationId": "search_models_list",
                "description": "Returns a list of all the available search models.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SearchModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "search_models"
                ]
            },
            "parameters": []
        },
        "/smart_links/": {
            "get": {
                "operationId": "smart_links_list",
                "description": "Returns a list of all the smart links.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmartLink"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "post": {
                "operationId": "smart_links_create",
                "description": "Create a new smart link.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "parameters": []
        },
        "/smart_links/{id}/": {
            "get": {
                "operationId": "smart_links_read",
                "description": "Return the details of the selected smart link.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SmartLink"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "put": {
                "operationId": "smart_links_update",
                "description": "Edit the selected smart link.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "patch": {
                "operationId": "smart_links_partial_update",
                "description": "Edit the selected smart link.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableSmartLink"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "delete": {
                "operationId": "smart_links_delete",
                "description": "Delete the selected smart link.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Smart link.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/smart_links/{id}/conditions/": {
            "get": {
                "operationId": "smart_links_conditions_list",
                "description": "Returns a list of all the smart link conditions.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SmartLinkCondition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "post": {
                "operationId": "smart_links_conditions_create",
                "description": "Create a new smart link condition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/smart_links/{id}/conditions/{condition_pk}/": {
            "get": {
                "operationId": "smart_links_conditions_read",
                "description": "Return the details of the selected smart link condition.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "put": {
                "operationId": "smart_links_conditions_update",
                "description": "Edit the selected smart link condition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "patch": {
                "operationId": "smart_links_conditions_partial_update",
                "description": "Edit the selected smart link condition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SmartLinkCondition"
                        }
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "delete": {
                "operationId": "smart_links_conditions_delete",
                "description": "Delete the selected smart link condition.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "smart_links"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "condition_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/staging_folders/": {
            "get": {
                "operationId": "staging_folders_list",
                "description": "Returns a list of all the staging folders and the files they contain.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StagingFolder"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "post": {
                "operationId": "staging_folders_create",
                "description": "Create a new staging folders.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "parameters": []
        },
        "/staging_folders/file/{staging_folder_pk}/{encoded_filename}/": {
            "get": {
                "operationId": "staging_folders_file_read",
                "description": "Details of the selected staging file.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolderFile"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "delete": {
                "operationId": "staging_folders_file_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "parameters": [
                {
                    "name": "staging_folder_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "encoded_filename",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/staging_folders/file/{staging_folder_pk}/{encoded_filename}/image/": {
            "get": {
                "operationId": "staging_folders_file_image_read",
                "description": "Returns an image representation of the selected staging folder file.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "parameters": [
                {
                    "name": "staging_folder_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "encoded_filename",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/staging_folders/file/{staging_folder_pk}/{encoded_filename}/upload/": {
            "post": {
                "operationId": "staging_folders_file_upload_create",
                "description": "Upload the selected staging folder file.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StagingFolderFileUpload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolderFileUpload"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "parameters": [
                {
                    "name": "staging_folder_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "encoded_filename",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/staging_folders/{id}/": {
            "get": {
                "operationId": "staging_folders_read",
                "description": "Details of the selected staging folders and the files it contains.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "put": {
                "operationId": "staging_folders_update",
                "description": "Edit the selected staging folders.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "patch": {
                "operationId": "staging_folders_partial_update",
                "description": "Edit the selected staging folders.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StagingFolder"
                        }
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "delete": {
                "operationId": "staging_folders_delete",
                "description": "Delete the selected staging folders.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "staging_folders"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Staging folder.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/tags/": {
            "get": {
                "operationId": "tags_list",
                "description": "Returns a list of all the tags.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tag"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "post": {
                "operationId": "tags_create",
                "description": "Create a new tag.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "parameters": []
        },
        "/tags/{id}/": {
            "get": {
                "operationId": "tags_read",
                "description": "Return the details of the selected tag.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "put": {
                "operationId": "tags_update",
                "description": "Edit the selected tag.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "patch": {
                "operationId": "tags_partial_update",
                "description": "Edit the selected tag.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableTag"
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "delete": {
                "operationId": "tags_delete",
                "description": "Delete the selected tag.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Tag.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/tags/{id}/documents/": {
            "get": {
                "operationId": "tags_documents_list",
                "description": "Returns a list of all the documents tagged by a particular tag.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Document"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "tags"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/templates/": {
            "get": {
                "operationId": "templates_list",
                "description": "Returns a list of all the available templates.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Template"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "templates"
                ]
            },
            "parameters": []
        },
        "/templates/{name}/": {
            "get": {
                "operationId": "templates_read",
                "description": "Retrieve the details of the partial template.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                },
                "tags": [
                    "templates"
                ]
            },
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/trashed_documents/": {
            "get": {
                "operationId": "trashed_documents_list",
                "description": "Returns a list of all the trashed documents.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DeletedDocument"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "trashed_documents"
                ]
            },
            "parameters": []
        },
        "/trashed_documents/{id}/": {
            "get": {
                "operationId": "trashed_documents_read",
                "description": "Retreive the details of the trashed document.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DeletedDocument"
                        }
                    }
                },
                "tags": [
                    "trashed_documents"
                ]
            },
            "delete": {
                "operationId": "trashed_documents_delete",
                "description": "Delete the trashed document.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "trashed_documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this deleted document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/trashed_documents/{id}/restore/": {
            "post": {
                "operationId": "trashed_documents_restore_create",
                "description": "Restore a trashed document.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "trashed_documents"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this deleted document.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/": {
            "get": {
                "operationId": "users_list",
                "description": "Returns a list of all the users.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_create",
                "description": "Create a new user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/current/": {
            "get": {
                "operationId": "users_current_read",
                "description": "Return the details of the current user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_current_update",
                "description": "Edit the current user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_current_partial_update",
                "description": "Partially edit the current user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_current_delete",
                "description": "Delete the current user.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": []
        },
        "/users/{id}/": {
            "get": {
                "operationId": "users_read",
                "description": "Return the details of the selected user.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "put": {
                "operationId": "users_update",
                "description": "Edit the selected user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "operationId": "users_partial_update",
                "description": "Partially edit the selected user.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "operationId": "users_delete",
                "description": "Delete the selected user.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this User.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/users/{id}/groups/": {
            "get": {
                "operationId": "users_groups_list",
                "description": "Returns a list of all the groups to which a user belongs.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Group"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "operationId": "users_groups_create",
                "description": "Add a user to a list of groups.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroupList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserGroupList"
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/": {
            "get": {
                "operationId": "workflows_list",
                "description": "Returns a list of all the workflows.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Workflow"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "post": {
                "operationId": "workflows_create",
                "description": "Create a new workflow.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": []
        },
        "/workflows/{id}/": {
            "get": {
                "operationId": "workflows_read",
                "description": "Return the details of the selected workflow.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Workflow"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "put": {
                "operationId": "workflows_update",
                "description": "Edit the selected workflow.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "patch": {
                "operationId": "workflows_partial_update",
                "description": "Edit the selected workflow.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflow"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "delete": {
                "operationId": "workflows_delete",
                "description": "Delete the selected workflow.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Workflow.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/workflows/{id}/document_types/": {
            "get": {
                "operationId": "workflows_document_types_list",
                "description": "Returns a list of all the document types attached to a workflow.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkflowDocumentType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "post": {
                "operationId": "workflows_document_types_create",
                "description": "Attach a document type to a specified workflow.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewWorkflowDocumentType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NewWorkflowDocumentType"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/{id}/document_types/{document_type_pk}/": {
            "get": {
                "operationId": "workflows_document_types_read",
                "description": "Returns the details of the selected workflow document type.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowDocumentType"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "delete": {
                "operationId": "workflows_document_types_delete",
                "description": "Remove a document type from the selected workflow.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "document_type_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/{id}/image/": {
            "get": {
                "operationId": "workflows_image_read",
                "description": "Returns an image representation of the selected workflow.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Workflow.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/workflows/{id}/states/": {
            "get": {
                "operationId": "workflows_states_list",
                "description": "Returns a list of all the workflow states.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkflowState"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "post": {
                "operationId": "workflows_states_create",
                "description": "Create a new workflow state.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/{id}/states/{state_pk}/": {
            "get": {
                "operationId": "workflows_states_read",
                "description": "Return the details of the selected workflow state.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "put": {
                "operationId": "workflows_states_update",
                "description": "Edit the selected workflow state.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "patch": {
                "operationId": "workflows_states_partial_update",
                "description": "Edit the selected workflow state.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowState"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "delete": {
                "operationId": "workflows_states_delete",
                "description": "Delete the selected workflow state.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "state_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/{id}/transitions/": {
            "get": {
                "operationId": "workflows_transitions_list",
                "description": "Returns a list of all the workflow transitions.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkflowTransition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "post": {
                "operationId": "workflows_transitions_create",
                "description": "Create a new workflow transition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/workflows/{id}/transitions/{transition_pk}/": {
            "get": {
                "operationId": "workflows_transitions_read",
                "description": "Return the details of the selected workflow transition.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkflowTransition"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "put": {
                "operationId": "workflows_transitions_update",
                "description": "Edit the selected workflow transition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "patch": {
                "operationId": "workflows_transitions_partial_update",
                "description": "Edit the selected workflow transition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WritableWorkflowTransition"
                        }
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "delete": {
                "operationId": "workflows_transitions_delete",
                "description": "Delete the selected workflow transition.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "workflows"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "transition_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "Cabinet": {
            "required": [
                "label",
                "parent"
            ],
            "type": "object",
            "properties": {
                "children": {
                    "description": "List of children cabinets.",
                    "type": "string",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "description": "Number of documents on this cabinet level.",
                    "type": "string",
                    "readOnly": true
                },
                "documents_url": {
                    "title": "Documents url",
                    "description": "URL of the API endpoint showing the list documents inside this cabinet.",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "full_path": {
                    "title": "Full path",
                    "description": "The name of this cabinet level appended to the names of its ancestors.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text used to identify the cabinet.",
                    "type": "string",
                    "maxLength": 128
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "parent_url": {
                    "title": "Parent url",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "WritableCabinet": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "documents_pk_list": {
                    "title": "Documents pk list",
                    "description": "Comma separated list of document primary keys to add to this cabinet.",
                    "type": "string"
                },
                "label": {
                    "title": "Label",
                    "description": "A short text used to identify the cabinet.",
                    "type": "string",
                    "maxLength": 128
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                }
            }
        },
        "DocumentTypeFilename": {
            "required": [
                "filename"
            ],
            "type": "object",
            "properties": {
                "filename": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "DocumentType": {
            "title": "Document type",
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "delete_time_period": {
                    "title": "Delete time period",
                    "description": "Amount of time after which documents of this type in the trash will be deleted.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "delete_time_unit": {
                    "title": "Delete time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ]
                },
                "documents_url": {
                    "title": "Documents url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document type.",
                    "type": "string",
                    "maxLength": 96
                },
                "filenames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentTypeFilename"
                    },
                    "readOnly": true
                },
                "trash_time_period": {
                    "title": "Trash time period",
                    "description": "Amount of time after which documents of this type will be moved to the trash.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "trash_time_unit": {
                    "title": "Trash time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ]
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            },
            "readOnly": true
        },
        "DocumentVersion": {
            "title": "Latest version",
            "type": "object",
            "properties": {
                "checksum": {
                    "title": "Checksum",
                    "description": "A hash/checkdigit/fingerprint generated from the document's binary data. Only identical documents will have the same checksum.",
                    "type": "string",
                    "readOnly": true
                },
                "comment": {
                    "title": "Comment",
                    "description": "An optional short text describing the document version.",
                    "type": "string"
                },
                "document_url": {
                    "title": "Document url",
                    "type": "string",
                    "readOnly": true
                },
                "download_url": {
                    "title": "Download url",
                    "type": "string",
                    "readOnly": true
                },
                "encoding": {
                    "title": "Encoding",
                    "description": "The document version file encoding. binary 7-bit, binary 8-bit, text, base64, etc.",
                    "type": "string",
                    "readOnly": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true
                },
                "mimetype": {
                    "title": "MIME type",
                    "description": "The document version's file mimetype. MIME types are a standard way to describe the format of a file, in this case the file format of the document. Some examples: \"text/plain\" or \"image/jpeg\". ",
                    "type": "string",
                    "readOnly": true
                },
                "pages_url": {
                    "title": "Pages url",
                    "type": "string",
                    "readOnly": true
                },
                "size": {
                    "title": "Size",
                    "type": "string",
                    "readOnly": true
                },
                "timestamp": {
                    "title": "Timestamp",
                    "description": "The server date and time when the document version was processed.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            },
            "readOnly": true
        },
        "CabinetDocument": {
            "type": "object",
            "properties": {
                "date_added": {
                    "title": "Added",
                    "description": "The server date and time when the document was finally processed and added to the system.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string",
                    "readOnly": true
                },
                "document_type": {
                    "$ref": "#/definitions/DocumentType"
                },
                "document_type_change_url": {
                    "title": "Document type change url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "readOnly": true
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "readOnly": true
                },
                "latest_version": {
                    "$ref": "#/definitions/DocumentVersion"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uuid": {
                    "title": "UUID",
                    "description": "UUID of a document, universally Unique ID. An unique identifier generated for each document.",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "versions_url": {
                    "title": "Versions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "cabinet_document_url": {
                    "title": "Cabinet document url",
                    "description": "API URL pointing to a document in relation to the cabinet storing it. This URL is different than the canonical document URL.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewCabinetDocument": {
            "required": [
                "documents_pk_list"
            ],
            "type": "object",
            "properties": {
                "documents_pk_list": {
                    "title": "Documents pk list",
                    "description": "Comma separated list of document primary keys to add to this cabinet.",
                    "type": "string"
                }
            }
        },
        "Document": {
            "title": "Document",
            "type": "object",
            "properties": {
                "date_added": {
                    "title": "Added",
                    "description": "The server date and time when the document was finally processed and added to the system.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string"
                },
                "document_type": {
                    "$ref": "#/definitions/DocumentType"
                },
                "document_type_change_url": {
                    "title": "Document type change url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "maxLength": 255
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "maxLength": 8
                },
                "latest_version": {
                    "$ref": "#/definitions/DocumentVersion"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uuid": {
                    "title": "UUID",
                    "description": "UUID of a document, universally Unique ID. An unique identifier generated for each document.",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "versions_url": {
                    "title": "Versions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "DocumentCheckout": {
            "required": [
                "document"
            ],
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/definitions/Document"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "NewDocumentCheckout": {
            "required": [
                "block_new_version",
                "document_pk",
                "expiration_datetime"
            ],
            "type": "object",
            "properties": {
                "block_new_version": {
                    "title": "Block new version",
                    "type": "boolean"
                },
                "document": {
                    "title": "Document",
                    "type": "integer",
                    "readOnly": true
                },
                "document_pk": {
                    "title": "Document pk",
                    "description": "Primary key of the document to be checked out.",
                    "type": "integer"
                },
                "expiration_datetime": {
                    "title": "Expiration datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "ContentType": {
            "required": [
                "app_label",
                "model"
            ],
            "type": "object",
            "properties": {
                "app_label": {
                    "title": "App label",
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "model": {
                    "title": "Python model class name",
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "WritableDocumentType": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "delete_time_period": {
                    "title": "Delete time period",
                    "description": "Amount of time after which documents of this type in the trash will be deleted.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "delete_time_unit": {
                    "title": "Delete time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ]
                },
                "documents_url": {
                    "title": "Documents url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document type.",
                    "type": "string",
                    "maxLength": 96
                },
                "trash_time_period": {
                    "title": "Trash time period",
                    "description": "Amount of time after which documents of this type will be moved to the trash.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "trash_time_unit": {
                    "title": "Trash time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ]
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "MetadataType": {
            "title": "Metadata type",
            "required": [
                "label",
                "name"
            ],
            "type": "object",
            "properties": {
                "default": {
                    "title": "Default",
                    "description": "Enter a template to render. Use Django's default templating language (https://docs.djangoproject.com/en/1.11/ref/templates/builtins/)",
                    "type": "string",
                    "maxLength": 128
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "Short description of this metadata type.",
                    "type": "string",
                    "maxLength": 48
                },
                "lookup": {
                    "title": "Lookup",
                    "description": "Enter a template to render. Must result in a comma delimited string. Use Django's default templating language (https://docs.djangoproject.com/en/1.11/ref/templates/builtins/).",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "description": "Name used by other apps to reference this metadata type. Do not use python reserved words, or spaces.",
                    "type": "string",
                    "maxLength": 48
                },
                "parser": {
                    "title": "Parser",
                    "description": "The parser will reformat the value entered to conform to the expected format.",
                    "type": "string",
                    "enum": [
                        "mayan.apps.metadata.parsers.DateAndTimeParser",
                        "mayan.apps.metadata.parsers.DateParser",
                        "mayan.apps.metadata.parsers.TimeParser"
                    ]
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "validation": {
                    "title": "Validator",
                    "description": "The validator will reject data entry if the value entered does not conform to the expected format.",
                    "type": "string",
                    "enum": [
                        "mayan.apps.metadata.validators.DateAndTimeValidator",
                        "mayan.apps.metadata.validators.DateValidator",
                        "mayan.apps.metadata.validators.TimeValidator"
                    ]
                }
            },
            "readOnly": true
        },
        "DocumentTypeMetadataType": {
            "type": "object",
            "properties": {
                "document_type": {
                    "$ref": "#/definitions/DocumentType"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "metadata_type": {
                    "$ref": "#/definitions/MetadataType"
                },
                "required": {
                    "title": "Required",
                    "type": "boolean"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewDocumentTypeMetadataType": {
            "required": [
                "metadata_type_pk"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "metadata_type_pk": {
                    "title": "Metadata type pk",
                    "description": "Primary key of the metadata type to be added.",
                    "type": "integer"
                },
                "required": {
                    "title": "Required",
                    "type": "boolean"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WritableDocumentTypeMetadataType": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "required": {
                    "title": "Required",
                    "type": "boolean"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DocumentTypeOCRSettings": {
            "type": "object",
            "properties": {
                "auto_ocr": {
                    "title": "Automatically queue newly created documents for OCR.",
                    "type": "boolean"
                }
            }
        },
        "DocumentTypeParsingSettings": {
            "type": "object",
            "properties": {
                "auto_parsing": {
                    "title": "Automatically queue newly created documents for parsing.",
                    "type": "boolean"
                }
            }
        },
        "WorkflowState": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "completion": {
                    "title": "Completion",
                    "description": "The percent of completion that this state represents in relation to the workflow. Use numbers without the percent sign.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "initial": {
                    "title": "Initial",
                    "description": "The state at which the workflow will start in. Only one state can be the initial state.",
                    "type": "boolean"
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe the workflow state.",
                    "type": "string",
                    "maxLength": 255
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "workflow_url": {
                    "title": "Workflow url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WorkflowTransition": {
            "required": [
                "destination_state",
                "label",
                "origin_state"
            ],
            "type": "object",
            "properties": {
                "destination_state": {
                    "$ref": "#/definitions/WorkflowState"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe the transition.",
                    "type": "string",
                    "maxLength": 255
                },
                "origin_state": {
                    "$ref": "#/definitions/WorkflowState"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "workflow_url": {
                    "title": "Workflow url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Workflow": {
            "required": [
                "internal_name",
                "label"
            ],
            "type": "object",
            "properties": {
                "document_types_url": {
                    "title": "Document types url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "internal_name": {
                    "title": "Internal name",
                    "description": "This value will be used by other apps to reference this workflow. Can only contain letters, numbers, and underscores.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$",
                    "maxLength": 255
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe the workflow.",
                    "type": "string",
                    "maxLength": 255
                },
                "states": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowState"
                    }
                },
                "transitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowTransition"
                    }
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "NewDocument": {
            "required": [
                "document_type",
                "file"
            ],
            "type": "object",
            "properties": {
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string"
                },
                "document_type": {
                    "title": "Document type",
                    "description": "The document type of the document.",
                    "type": "integer"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "maxLength": 255
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "maxLength": 8
                }
            }
        },
        "RecentDocument": {
            "type": "object",
            "properties": {
                "document": {
                    "title": "Document",
                    "type": "integer",
                    "readOnly": true
                },
                "datetime_accessed": {
                    "title": "Accessed",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "DetachedSignature": {
            "type": "object",
            "properties": {
                "date": {
                    "title": "Date signed",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "document_version_url": {
                    "title": "Document version url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "key_id": {
                    "title": "Key ID",
                    "description": "ID of the key that will be used to sign the document.",
                    "type": "string",
                    "readOnly": true
                },
                "signature_file": {
                    "title": "Signature file",
                    "description": "Signature file previously generated.",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "signature_id": {
                    "title": "Signature ID",
                    "type": "string",
                    "readOnly": true
                },
                "public_key_fingerprint": {
                    "title": "Public key fingerprint",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "SignDetached": {
            "required": [
                "key_id"
            ],
            "type": "object",
            "properties": {
                "date": {
                    "title": "Date signed",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "document_version_url": {
                    "title": "Document version url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "key_id": {
                    "title": "Key ID",
                    "description": "ID of the key that will be used to sign the document.",
                    "type": "string",
                    "maxLength": 40
                },
                "signature_id": {
                    "title": "Signature ID",
                    "type": "string",
                    "readOnly": true
                },
                "passphrase": {
                    "title": "Passphrase",
                    "description": "The passphrase to unlock the key and allow it to be used to sign the document version.",
                    "type": "string"
                },
                "public_key_fingerprint": {
                    "title": "Public key fingerprint",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "EmbeddedSignature": {
            "required": [
                "key_id"
            ],
            "type": "object",
            "properties": {
                "date": {
                    "title": "Date signed",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "document_version_url": {
                    "title": "Document version url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "key_id": {
                    "title": "Key ID",
                    "description": "ID of the key that will be used to sign the document.",
                    "type": "string",
                    "maxLength": 40
                },
                "signature_id": {
                    "title": "Signature ID",
                    "type": "string",
                    "readOnly": true
                },
                "passphrase": {
                    "title": "Passphrase",
                    "type": "string"
                },
                "public_key_fingerprint": {
                    "title": "Public key fingerprint",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "SignEmbedded": {
            "required": [
                "key_id"
            ],
            "type": "object",
            "properties": {
                "date": {
                    "title": "Date signed",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "document_version_url": {
                    "title": "Document version url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "key_id": {
                    "title": "Key ID",
                    "description": "ID of the key that will be used to sign the document.",
                    "type": "string",
                    "maxLength": 40
                },
                "signature_id": {
                    "title": "Signature ID",
                    "type": "string",
                    "readOnly": true
                },
                "passphrase": {
                    "title": "Passphrase",
                    "description": "The passphrase to unlock the key and allow it to be used to sign the document version.",
                    "type": "string"
                },
                "public_key_fingerprint": {
                    "title": "Public key fingerprint",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "Group": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "users_count": {
                    "title": "Users count",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "User": {
            "title": "User",
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 30
                },
                "date_joined": {
                    "title": "Date joined",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Group"
                    },
                    "readOnly": true
                },
                "groups_pk_list": {
                    "title": "Groups pk list",
                    "description": "List of group primary keys to which to add the user.",
                    "type": "string"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active?",
                    "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                    "type": "boolean",
                    "readOnly": true
                },
                "last_login": {
                    "title": "Last login",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150
                },
                "password": {
                    "title": "Password",
                    "type": "string"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150
                }
            },
            "readOnly": true
        },
        "Comment": {
            "required": [
                "comment"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "title": "Comment",
                    "type": "string"
                },
                "document": {
                    "$ref": "#/definitions/Document"
                },
                "document_comments_url": {
                    "title": "Document comments url",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "submit_date": {
                    "title": "Date time submitted",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "WritableComment": {
            "required": [
                "comment"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "title": "Comment",
                    "type": "string"
                },
                "document": {
                    "$ref": "#/definitions/Document"
                },
                "document_comments_url": {
                    "title": "Document comments url",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "submit_date": {
                    "title": "Date time submitted",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "DocumentMetadata": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/definitions/Document"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "metadata_type": {
                    "$ref": "#/definitions/MetadataType"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "description": "The actual value stored in the metadata type field for the document.",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "NewDocumentMetadata": {
            "required": [
                "metadata_type_pk"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "metadata_type_pk": {
                    "title": "Metadata type pk",
                    "description": "Primary key of the metadata type to be added to the document.",
                    "type": "integer"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "description": "The actual value stored in the metadata type field for the document.",
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "DocumentTag": {
            "type": "object",
            "properties": {
                "color": {
                    "title": "Color",
                    "description": "The RGB color values for the tag.",
                    "type": "string",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "documents_url": {
                    "title": "Documents url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text used as the tag name.",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "document_tag_url": {
                    "title": "Document tag url",
                    "description": "API URL pointing to a tag in relation to the document attached to it. This URL is different than the canonical tag URL.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewDocumentTag": {
            "required": [
                "tag_pk"
            ],
            "type": "object",
            "properties": {
                "tag_pk": {
                    "title": "Tag pk",
                    "description": "Primary key of the tag to be added.",
                    "type": "integer"
                }
            }
        },
        "DocumentPageContent": {
            "type": "object",
            "properties": {
                "content": {
                    "title": "Content",
                    "description": "The actual text content as extracted by the document parsing backend.",
                    "type": "string"
                }
            }
        },
        "DocumentPageOCRContent": {
            "type": "object",
            "properties": {
                "content": {
                    "title": "Content",
                    "description": "The actual text content extracted by the OCR backend.",
                    "type": "string"
                }
            }
        },
        "WritableDocument": {
            "type": "object",
            "properties": {
                "date_added": {
                    "title": "Added",
                    "description": "The server date and time when the document was finally processed and added to the system.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string"
                },
                "document_type": {
                    "$ref": "#/definitions/DocumentType"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "maxLength": 255
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "maxLength": 8
                },
                "latest_version": {
                    "$ref": "#/definitions/DocumentVersion"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uuid": {
                    "title": "UUID",
                    "description": "UUID of a document, universally Unique ID. An unique identifier generated for each document.",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "versions": {
                    "title": "Versions",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "IndexInstanceNode": {
            "type": "object",
            "properties": {
                "documents": {
                    "title": "Documents",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "children": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "readOnly": true
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "ResolvedSmartLink": {
            "type": "object",
            "properties": {
                "conditions_url": {
                    "title": "Conditions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "document_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentType"
                    },
                    "readOnly": true
                },
                "dynamic_label": {
                    "title": "Dynamic label",
                    "description": "Use this field to show a unique label depending on the document from which the smart link is being accessed.",
                    "type": "string",
                    "readOnly": true
                },
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text describing the smart link.",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "resolved_dynamic_label": {
                    "title": "Resolved dynamic label",
                    "type": "string",
                    "readOnly": true
                },
                "resolved_smart_link_url": {
                    "title": "Resolved smart link url",
                    "type": "string",
                    "readOnly": true
                },
                "resolved_documents_url": {
                    "title": "Resolved documents url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResolvedSmartLinkDocument": {
            "type": "object",
            "properties": {
                "date_added": {
                    "title": "Added",
                    "description": "The server date and time when the document was finally processed and added to the system.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string",
                    "readOnly": true
                },
                "document_type": {
                    "$ref": "#/definitions/DocumentType"
                },
                "document_type_change_url": {
                    "title": "Document type change url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "readOnly": true
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "readOnly": true
                },
                "latest_version": {
                    "$ref": "#/definitions/DocumentVersion"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uuid": {
                    "title": "UUID",
                    "description": "UUID of a document, universally Unique ID. An unique identifier generated for each document.",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "pk": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "versions_url": {
                    "title": "Versions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "resolved_smart_link_url": {
                    "title": "Resolved smart link url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewDocumentDocumentType": {
            "required": [
                "new_document_type"
            ],
            "type": "object",
            "properties": {
                "new_document_type": {
                    "title": "New document type",
                    "type": "integer"
                }
            }
        },
        "NewDocumentVersion": {
            "required": [
                "comment",
                "file"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "title": "Comment",
                    "type": "string"
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WritableDocumentVersion": {
            "type": "object",
            "properties": {
                "checksum": {
                    "title": "Checksum",
                    "description": "A hash/checkdigit/fingerprint generated from the document's binary data. Only identical documents will have the same checksum.",
                    "type": "string",
                    "readOnly": true
                },
                "comment": {
                    "title": "Comment",
                    "description": "An optional short text describing the document version.",
                    "type": "string"
                },
                "document_url": {
                    "title": "Document url",
                    "type": "string",
                    "readOnly": true
                },
                "download_url": {
                    "title": "Download url",
                    "type": "string",
                    "readOnly": true
                },
                "encoding": {
                    "title": "Encoding",
                    "description": "The document version file encoding. binary 7-bit, binary 8-bit, text, base64, etc.",
                    "type": "string",
                    "readOnly": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true
                },
                "mimetype": {
                    "title": "MIME type",
                    "description": "The document version's file mimetype. MIME types are a standard way to describe the format of a file, in this case the file format of the document. Some examples: \"text/plain\" or \"image/jpeg\". ",
                    "type": "string",
                    "readOnly": true
                },
                "pages_url": {
                    "title": "Pages url",
                    "type": "string",
                    "readOnly": true
                },
                "timestamp": {
                    "title": "Timestamp",
                    "description": "The server date and time when the document version was processed.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DocumentPage": {
            "type": "object",
            "properties": {
                "document_version_url": {
                    "title": "Document version url",
                    "type": "string",
                    "readOnly": true
                },
                "image_url": {
                    "title": "Image url",
                    "type": "string",
                    "readOnly": true
                },
                "page_number": {
                    "title": "Page number",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WorkflowInstanceLogEntry": {
            "title": "Last log entry",
            "type": "object",
            "properties": {
                "comment": {
                    "title": "Comment",
                    "type": "string"
                },
                "datetime": {
                    "title": "Datetime",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "document_workflow_url": {
                    "title": "Document workflow url",
                    "type": "string",
                    "readOnly": true
                },
                "transition": {
                    "$ref": "#/definitions/WorkflowTransition"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "readOnly": true
        },
        "WorkflowInstance": {
            "type": "object",
            "properties": {
                "current_state": {
                    "$ref": "#/definitions/WorkflowState"
                },
                "document_workflow_url": {
                    "title": "Document workflow url",
                    "description": "API URL pointing to a workflow in relation to the document to which it is attached. This URL is different than the canonical workflow URL.",
                    "type": "string",
                    "readOnly": true
                },
                "last_log_entry": {
                    "$ref": "#/definitions/WorkflowInstanceLogEntry"
                },
                "log_entries_url": {
                    "title": "Log entries url",
                    "description": "A link to the entire history of this workflow.",
                    "type": "string",
                    "readOnly": true
                },
                "transition_choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkflowTransition"
                    },
                    "readOnly": true
                },
                "workflow": {
                    "$ref": "#/definitions/Workflow"
                }
            }
        },
        "WritableWorkflowInstanceLogEntry": {
            "required": [
                "transition_pk"
            ],
            "type": "object",
            "properties": {
                "comment": {
                    "title": "Comment",
                    "type": "string"
                },
                "datetime": {
                    "title": "Datetime",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "document_workflow_url": {
                    "title": "Document workflow url",
                    "type": "string",
                    "readOnly": true
                },
                "transition": {
                    "$ref": "#/definitions/WorkflowTransition"
                },
                "transition_pk": {
                    "title": "Transition pk",
                    "description": "Primary key of the transition to be added.",
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "EventTypeNamespace": {
            "required": [
                "label",
                "name"
            ],
            "type": "object",
            "properties": {
                "label": {
                    "title": "Label",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "event_types_url": {
                    "title": "Event types url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "EventType": {
            "required": [
                "label",
                "name",
                "id"
            ],
            "type": "object",
            "properties": {
                "label": {
                    "title": "Label",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "event_type_namespace_url": {
                    "title": "Event type namespace url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Event": {
            "required": [
                "actor_object_id"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "actor": {
                    "title": "Actor",
                    "type": "string",
                    "readOnly": true
                },
                "target": {
                    "title": "Target",
                    "type": "string",
                    "readOnly": true
                },
                "actor_content_type": {
                    "$ref": "#/definitions/ContentType"
                },
                "target_content_type": {
                    "$ref": "#/definitions/ContentType"
                },
                "verb": {
                    "$ref": "#/definitions/EventType"
                },
                "actor_object_id": {
                    "title": "Actor object id",
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "title": "Description",
                    "type": "string"
                },
                "target_object_id": {
                    "title": "Target object id",
                    "type": "string",
                    "maxLength": 255
                },
                "timestamp": {
                    "title": "Timestamp",
                    "type": "string",
                    "format": "date-time"
                },
                "public": {
                    "title": "Public",
                    "type": "boolean"
                }
            }
        },
        "IndexTemplateNode": {
            "required": [
                "expression",
                "index"
            ],
            "type": "object",
            "properties": {
                "enabled": {
                    "title": "Enabled",
                    "description": "Causes this node to be visible and updated when document data changes.",
                    "type": "boolean"
                },
                "expression": {
                    "title": "Indexing expression",
                    "description": "Enter a template to render. Use Django's default templating language (https://docs.djangoproject.com/en/1.11/ref/templates/builtins/)",
                    "type": "string"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "index": {
                    "title": "Index",
                    "type": "integer"
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "readOnly": true
                },
                "link_documents": {
                    "title": "Link documents",
                    "description": "Check this option to have this node act as a container for documents and not as a parent for further nodes.",
                    "type": "boolean"
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer"
                }
            }
        },
        "Index": {
            "required": [
                "document_types",
                "label"
            ],
            "type": "object",
            "properties": {
                "document_types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "enabled": {
                    "title": "Enabled",
                    "description": "Causes this index to be visible and updated when document data changes.",
                    "type": "boolean"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "instance_root": {
                    "$ref": "#/definitions/IndexInstanceNode"
                },
                "label": {
                    "title": "Label",
                    "description": "Short description of this index.",
                    "type": "string",
                    "maxLength": 128
                },
                "node_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IndexTemplateNode"
                    },
                    "readOnly": true
                }
            }
        },
        "Key": {
            "required": [
                "key_data"
            ],
            "type": "object",
            "properties": {
                "algorithm": {
                    "title": "Algorithm",
                    "type": "integer",
                    "readOnly": true
                },
                "creation_date": {
                    "title": "Creation date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "expiration_date": {
                    "title": "Expiration date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "fingerprint": {
                    "title": "Fingerprint",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "key_data": {
                    "title": "Key data",
                    "description": "ASCII armored version of the key.",
                    "type": "string"
                },
                "key_type": {
                    "title": "Type",
                    "type": "string",
                    "readOnly": true
                },
                "length": {
                    "title": "Length",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User ID",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Message": {
            "required": [
                "label",
                "message"
            ],
            "type": "object",
            "properties": {
                "end_datetime": {
                    "title": "End date time",
                    "description": "Date and time until when this message is to be displayed.",
                    "type": "string",
                    "format": "date-time"
                },
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean"
                },
                "label": {
                    "title": "Label",
                    "description": "Short description of this message.",
                    "type": "string",
                    "maxLength": 32
                },
                "message": {
                    "title": "Message",
                    "description": "The actual message to be displayed.",
                    "type": "string"
                },
                "start_datetime": {
                    "title": "Start date time",
                    "description": "Date and time after which this message will be displayed.",
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "Notification": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/Event"
                },
                "read": {
                    "title": "Read",
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "namespace": {
                    "title": "Namespace",
                    "type": "string",
                    "readOnly": true
                },
                "pk": {
                    "title": "Pk",
                    "type": "string",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Role": {
            "title": "Role",
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Group"
                    },
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text describing the role.",
                    "type": "string",
                    "maxLength": 128
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    },
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            },
            "readOnly": true
        },
        "AccessControlList": {
            "required": [
                "object_id"
            ],
            "type": "object",
            "properties": {
                "content_type": {
                    "$ref": "#/definitions/ContentType"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "permissions_url": {
                    "title": "Permissions url",
                    "description": "API URL pointing to the list of permissions for this access control list.",
                    "type": "string",
                    "readOnly": true
                },
                "role": {
                    "$ref": "#/definitions/Role"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WritableAccessControlList": {
            "required": [
                "role_pk"
            ],
            "type": "object",
            "properties": {
                "content_type": {
                    "$ref": "#/definitions/ContentType"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "integer",
                    "readOnly": true
                },
                "permissions_pk_list": {
                    "title": "Permissions pk list",
                    "description": "Comma separated list of permission primary keys to grant to this access control list.",
                    "type": "string"
                },
                "permissions_url": {
                    "title": "Permissions url",
                    "description": "API URL pointing to the list of permissions for this access control list.",
                    "type": "string",
                    "readOnly": true
                },
                "role_pk": {
                    "title": "Role pk",
                    "description": "Primary keys of the role to which this access control list binds to.",
                    "type": "integer"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AccessControlListPermission": {
            "type": "object",
            "properties": {
                "namespace": {
                    "title": "Namespace",
                    "type": "string",
                    "readOnly": true
                },
                "pk": {
                    "title": "Pk",
                    "type": "string",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "readOnly": true
                },
                "acl_permission_url": {
                    "title": "Acl permission url",
                    "description": "API URL pointing to a permission in relation to the access control list to which it is attached. This URL is different than the canonical workflow URL.",
                    "type": "string",
                    "readOnly": true
                },
                "acl_url": {
                    "title": "Acl url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WritableAccessControlListPermission": {
            "required": [
                "permission_pk"
            ],
            "type": "object",
            "properties": {
                "namespace": {
                    "title": "Namespace",
                    "type": "string",
                    "readOnly": true
                },
                "pk": {
                    "title": "Pk",
                    "type": "string",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "readOnly": true
                },
                "acl_permission_url": {
                    "title": "Acl permission url",
                    "description": "API URL pointing to a permission in relation to the access control list to which it is attached. This URL is different than the canonical workflow URL.",
                    "type": "string",
                    "readOnly": true
                },
                "acl_url": {
                    "title": "Acl url",
                    "type": "string",
                    "readOnly": true
                },
                "permission_pk": {
                    "title": "Permission pk",
                    "description": "Primary key of the new permission to grant to the access control list.",
                    "type": "string"
                }
            }
        },
        "WritableRole": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "groups_pk_list": {
                    "title": "Groups pk list",
                    "description": "Comma separated list of groups primary keys to add to, or replace in this role.",
                    "type": "string"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text describing the role.",
                    "type": "string",
                    "maxLength": 128
                },
                "permissions_pk_list": {
                    "title": "Permissions pk list",
                    "description": "Comma separated list of permission primary keys to grant to this role.",
                    "type": "string"
                }
            }
        },
        "SearchField": {
            "type": "object",
            "properties": {
                "field": {
                    "title": "Field",
                    "type": "string",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SearchModel": {
            "type": "object",
            "properties": {
                "app_label": {
                    "title": "App label",
                    "type": "string",
                    "readOnly": true
                },
                "model_name": {
                    "title": "Model name",
                    "type": "string",
                    "readOnly": true
                },
                "pk": {
                    "title": "Pk",
                    "type": "string",
                    "readOnly": true
                },
                "search_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchField"
                    },
                    "readOnly": true
                }
            }
        },
        "SmartLink": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "conditions_url": {
                    "title": "Conditions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "document_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentType"
                    },
                    "readOnly": true
                },
                "dynamic_label": {
                    "title": "Dynamic label",
                    "description": "Use this field to show a unique label depending on the document from which the smart link is being accessed.",
                    "type": "string",
                    "maxLength": 96
                },
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean"
                },
                "label": {
                    "title": "Label",
                    "description": "A short text describing the smart link.",
                    "type": "string",
                    "maxLength": 128
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "WritableSmartLink": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "conditions_url": {
                    "title": "Conditions url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "document_types_pk_list": {
                    "title": "Document types pk list",
                    "description": "Comma separated list of document type primary keys to which this smart link will be attached.",
                    "type": "string"
                },
                "dynamic_label": {
                    "title": "Dynamic label",
                    "description": "Use this field to show a unique label depending on the document from which the smart link is being accessed.",
                    "type": "string",
                    "maxLength": 96
                },
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean"
                },
                "label": {
                    "title": "Label",
                    "description": "A short text describing the smart link.",
                    "type": "string",
                    "maxLength": 128
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "SmartLinkCondition": {
            "required": [
                "expression",
                "foreign_document_data",
                "operator"
            ],
            "type": "object",
            "properties": {
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean"
                },
                "expression": {
                    "title": "Expression",
                    "description": "The expression using document properties to be evaluated against the foreign document field.",
                    "type": "string"
                },
                "foreign_document_data": {
                    "title": "Foreign document attribute",
                    "description": "This represents the metadata of all other documents.",
                    "type": "string",
                    "maxLength": 128
                },
                "inclusion": {
                    "title": "Inclusion",
                    "description": "The inclusion is ignored for the first item.",
                    "type": "string",
                    "enum": [
                        "&",
                        "|"
                    ]
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "negated": {
                    "title": "Negated",
                    "description": "Inverts the logic of the operator.",
                    "type": "boolean"
                },
                "operator": {
                    "title": "Operator",
                    "type": "string",
                    "enum": [
                        "exact",
                        "iexact",
                        "contains",
                        "icontains",
                        "in",
                        "gt",
                        "gte",
                        "lt",
                        "lte",
                        "startswith",
                        "istartswith",
                        "endswith",
                        "iendswith",
                        "regex",
                        "iregex"
                    ]
                },
                "smart_link_url": {
                    "title": "Smart link url",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "StagingFolder": {
            "required": [
                "folder_path",
                "label",
                "preview_width",
                "uncompress"
            ],
            "type": "object",
            "properties": {
                "delete_after_upload": {
                    "title": "Delete after upload",
                    "description": "Delete the file after is has been successfully uploaded.",
                    "type": "boolean"
                },
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean"
                },
                "files": {
                    "title": "Files",
                    "type": "string",
                    "readOnly": true
                },
                "folder_path": {
                    "title": "Folder path",
                    "description": "Server side filesystem path.",
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe this source.",
                    "type": "string",
                    "maxLength": 128
                },
                "preview_height": {
                    "title": "Preview height",
                    "description": "Height value to be passed to the converter backend.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "preview_width": {
                    "title": "Preview width",
                    "description": "Width value to be passed to the converter backend.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "uncompress": {
                    "title": "Uncompress",
                    "description": "Whether to expand or not compressed archives.",
                    "type": "string",
                    "enum": [
                        "y",
                        "n",
                        "a"
                    ]
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "StagingFolderFile": {
            "required": [
                "filename",
                "encoded_filename"
            ],
            "type": "object",
            "properties": {
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255
                },
                "image_url": {
                    "title": "Image url",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "encoded_filename": {
                    "title": "Encoded filename",
                    "type": "string",
                    "maxLength": 255
                },
                "upload_url": {
                    "title": "Upload url",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "StagingFolderFileUpload": {
            "required": [
                "document_type"
            ],
            "type": "object",
            "properties": {
                "document_type": {
                    "title": "Document type",
                    "type": "integer"
                },
                "expand": {
                    "title": "Expand compressed files",
                    "description": "Upload a compressed file's contained files as individual documents.",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "Tag": {
            "required": [
                "color",
                "label"
            ],
            "type": "object",
            "properties": {
                "color": {
                    "title": "Color",
                    "description": "The RGB color values for the tag.",
                    "type": "string",
                    "pattern": "^#?((?:[0-F]{3}){1,2})$",
                    "maxLength": 7
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "documents_url": {
                    "title": "Documents url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text used as the tag name.",
                    "type": "string",
                    "maxLength": 128
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "WritableTag": {
            "required": [
                "color",
                "label"
            ],
            "type": "object",
            "properties": {
                "color": {
                    "title": "Color",
                    "description": "The RGB color values for the tag.",
                    "type": "string",
                    "pattern": "^#?((?:[0-F]{3}){1,2})$",
                    "maxLength": 7
                },
                "documents_pk_list": {
                    "title": "Documents pk list",
                    "description": "Comma separated list of document primary keys to which this tag will be attached.",
                    "type": "string"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text used as the tag name.",
                    "type": "string",
                    "maxLength": 128
                }
            }
        },
        "Template": {
            "type": "object",
            "properties": {
                "hex_hash": {
                    "title": "Hex hash",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "html": {
                    "title": "Html",
                    "type": "string",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "DeletedDocument": {
            "type": "object",
            "properties": {
                "date_added": {
                    "title": "Added",
                    "description": "The server date and time when the document was finally processed and added to the system.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "deleted_date_time": {
                    "title": "Date and time trashed",
                    "description": "The server date and time when the document was moved to the trash.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "description": "An optional short text describing a document.",
                    "type": "string",
                    "readOnly": true
                },
                "document_type": {
                    "title": "Document type",
                    "description": "The document type of the document.",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "document_type_label": {
                    "title": "Document type label",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document.",
                    "type": "string",
                    "readOnly": true
                },
                "language": {
                    "title": "Language",
                    "description": "The dominant language in the document.",
                    "type": "string",
                    "readOnly": true
                },
                "restore": {
                    "title": "Restore",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uuid": {
                    "title": "UUID",
                    "description": "UUID of a document, universally Unique ID. An unique identifier generated for each document.",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                }
            }
        },
        "UserGroupList": {
            "required": [
                "group_pk_list"
            ],
            "type": "object",
            "properties": {
                "group_pk_list": {
                    "title": "Group pk list",
                    "description": "Comma separated list of group primary keys to assign this user to.",
                    "type": "string"
                }
            }
        },
        "WritableWorkflow": {
            "required": [
                "label",
                "internal_name"
            ],
            "type": "object",
            "properties": {
                "document_types_pk_list": {
                    "title": "Document types pk list",
                    "description": "Comma separated list of document type primary keys to which this workflow will be attached.",
                    "type": "string"
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe the workflow.",
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "internal_name": {
                    "title": "Internal name",
                    "description": "This value will be used by other apps to reference this workflow. Can only contain letters, numbers, and underscores.",
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]+$",
                    "maxLength": 255
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                }
            }
        },
        "WorkflowDocumentType": {
            "type": "object",
            "properties": {
                "delete_time_period": {
                    "title": "Delete time period",
                    "description": "Amount of time after which documents of this type in the trash will be deleted.",
                    "type": "integer",
                    "readOnly": true
                },
                "delete_time_unit": {
                    "title": "Delete time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ],
                    "readOnly": true
                },
                "documents_url": {
                    "title": "Documents url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "documents_count": {
                    "title": "Documents count",
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "The name of the document type.",
                    "type": "string",
                    "readOnly": true
                },
                "filenames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentTypeFilename"
                    },
                    "readOnly": true
                },
                "trash_time_period": {
                    "title": "Trash time period",
                    "description": "Amount of time after which documents of this type will be moved to the trash.",
                    "type": "integer",
                    "readOnly": true
                },
                "trash_time_unit": {
                    "title": "Trash time unit",
                    "type": "string",
                    "enum": [
                        "days",
                        "hours",
                        "minutes"
                    ],
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "workflow_document_type_url": {
                    "title": "Workflow document type url",
                    "description": "API URL pointing to a document type in relation to the workflow to which it is attached. This URL is different than the canonical document type URL.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewWorkflowDocumentType": {
            "required": [
                "document_type_pk"
            ],
            "type": "object",
            "properties": {
                "document_type_pk": {
                    "title": "Document type pk",
                    "description": "Primary key of the document type to be added.",
                    "type": "integer"
                }
            }
        },
        "WritableWorkflowTransition": {
            "required": [
                "destination_state_pk",
                "label",
                "origin_state_pk"
            ],
            "type": "object",
            "properties": {
                "destination_state_pk": {
                    "title": "Destination state pk",
                    "description": "Primary key of the destination state to be added.",
                    "type": "integer"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "description": "A short text to describe the transition.",
                    "type": "string",
                    "maxLength": 255
                },
                "origin_state_pk": {
                    "title": "Origin state pk",
                    "description": "Primary key of the origin state to be added.",
                    "type": "integer"
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "workflow_url": {
                    "title": "Workflow url",
                    "type": "string",
                    "readOnly": true
                }
            }
        }
    }
}
